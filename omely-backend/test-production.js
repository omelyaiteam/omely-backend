// TEST DE PRODUCTION - SYST√àME D'EXTRACTION AVANC√â
const testBookText = `
LES SECRETS D'UN ESPRIT MILLIONNAIRE
T. HARV EKER

CHAPITRE 1
VOTRE PLAN FINANCIER INT√âRIEUR

Si votre "plan financier" inconscient n'est pas "r√©gl√©" sur la r√©ussite, rien de ce que vous apprendrez, rien de ce que vous saurez et rien de ce que vous accomplirez ne fera r√©ellement de diff√©rence.

PRINCIPE CL√â #1 : Votre plan financier int√©rieur d√©termine votre destin√©e financi√®re.

Les riches pensent diff√©remment des pauvres et de la classe moyenne. Voici les 17 diff√©rences principales :

DIFF√âRENCE #1 : Les riches croient : "Je cr√©e ma vie." Les pauvres croient : "La vie m'arrive."
DIFF√âRENCE #2 : Les riches jouent au jeu de l'argent pour gagner. Les pauvres jouent au jeu de l'argent pour ne pas perdre.
DIFF√âRENCE #3 : Les riches s'engagent √† √™tre riches. Les pauvres veulent √™tre riches.

CHAPITRE 2
LES STRAT√âGIES PRATIQUES

PRINCIPE CL√â #2 : La richesse est un √©tat d'esprit, pas un montant d'argent.

STRAT√âGIE #1 : Payez-vous en premier
Mettez 10% de vos revenus dans un compte d'investissement avant de payer vos factures.

CITATION IMPORTANTE : "Ne croyez pas un tra√Ætre mot de ce que je vous dis. Testez-le dans votre propre vie."

DONN√âES IMPORTANTES :
- 80% des millionnaires sont des entrepreneurs
- 90% des millionnaires ont investi dans l'immobilier
- 95% des millionnaires lisent au moins 30 minutes par jour
`;

async function testProductionExtraction() {
  console.log('üß™ TEST DE PRODUCTION - SYST√àME D\'EXTRACTION AVANC√â');
  console.log('====================================================');
  
  try {
    // Cr√©er un FormData avec le texte de test
    const formData = new FormData();
    const blob = new Blob([testBookText], { type: 'text/plain' });
    formData.append('file', blob, 'test-book.txt');
    
    console.log('üì§ Envoi de la requ√™te au serveur de production...');
    
    const response = await fetch('https://omely-node-backend.fly.dev/summarize/pdf', {
      method: 'POST',
      body: formData
    });
    
    if (!response.ok) {
      throw new Error(`Erreur HTTP: ${response.status} ${response.statusText}`);
    }
    
    const result = await response.json();
    
    console.log('‚úÖ R√©ponse re√ßue du serveur de production');
    console.log(`üìä Statut: ${result.status}`);
    console.log(`‚è±Ô∏è Temps de traitement: ${result.metadata?.totalProcessingTime}ms`);
    console.log(`üìÑ Longueur du texte: ${result.metadata?.textLength} caract√®res`);
    console.log(`üìù Longueur du r√©sum√©: ${result.metadata?.summaryLength} caract√®res`);
    
    if (result.status === 'success') {
      console.log('\nüìñ R√âSUM√â EXTRACTION COMPL√àTE:');
      console.log('=' .repeat(80));
      console.log(result.summary);
      console.log('=' .repeat(80));
      
      // V√©rification rapide de la qualit√©
      const summary = result.summary;
      const qualityChecks = {
        hasPrinciples: summary.includes('üîë PRINCIPES') && summary.includes('PRIORIT√â MAXIMALE'),
        hasDifferences: summary.includes('‚ö° DIFF√âRENCES') && summary.includes('riches/pauvres'),
        hasStructure: summary.includes('üìñ STRUCTURE') && summary.includes('CHAPITRES'),
        hasQuotes: summary.includes('üí¨ CITATIONS'),
        hasKeyPoints: summary.includes('üéØ POINTS CL√âS'),
        hasConcepts: summary.includes('üí° CONCEPTS'),
        hasExamples: summary.includes('üìù EXEMPLES'),
        hasTechniques: summary.includes('üõ†Ô∏è TECHNIQUES'),
        hasData: summary.includes('üìä DONN√âES'),
        hasActionPlan: summary.includes('üéì PLAN D\'ACTION'),
        has17Differences: summary.includes('17') && summary.includes('diff√©rences'),
        hasNoAnalysis: !summary.includes('Analysis: I can now help you')
      };
      
      const foundElements = Object.values(qualityChecks).filter(Boolean).length;
      const totalElements = Object.keys(qualityChecks).length;
      const qualityScore = Math.round((foundElements / totalElements) * 100);
      
      console.log(`\nüìä QUALIT√â DE L'EXTRACTION: ${qualityScore}% (${foundElements}/${totalElements} crit√®res)`);
      
      if (qualityScore >= 80) {
        console.log('üéâ SUCC√àS: Le syst√®me d\'extraction avanc√© fonctionne parfaitement en production !');
        console.log('‚úÖ Extraction 100% compl√®te activ√©e');
        console.log('‚úÖ Tous les principes et diff√©rences extraits');
        console.log('‚úÖ Structure compl√®te par chapitres');
        console.log('‚úÖ Plan d\'action d√©taill√©');
      } else {
        console.log('‚ö†Ô∏è ATTENTION: Qualit√© d\'extraction √† am√©liorer');
      }
      
    } else {
      console.error('‚ùå √âchec de l\'extraction:', result.message);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test de production:', error.message);
  }
}

// Lancer le test
testProductionExtraction();
