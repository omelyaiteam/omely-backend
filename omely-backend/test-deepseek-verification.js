// SCRIPT DE V√âRIFICATION EXHAUSTIVE DE DEEPSEEK V2
import { verifyDeepSeekModelUsage, getDeepSeekConfig, testDeepSeekConnection } from './utils/openaiService.js';

async function runDeepSeekVerification() {
  console.log('üîç D√âMARRAGE V√âRIFICATION COMPL√àTE DEEPSEEK V2\n');

  try {
    // 1. V√©rifier la configuration
    console.log('üìã 1. V√âRIFICATION CONFIGURATION:');
    const config = getDeepSeekConfig();
    console.log('   Configuration:', JSON.stringify(config, null, 2));

    if (!config.hasApiKey) {
      console.error('‚ùå ERREUR: Cl√© API DeepSeek non configur√©e');
      console.log('   D√©finissez la variable d\'environnement DEEPSEEK_API_KEY');
      return;
    }

    // 2. Test de connexion simple
    console.log('\nüîó 2. TEST DE CONNEXION:');
    const testResult = await testDeepSeekConnection();
    if (testResult.success) {
      console.log('‚úÖ Connexion r√©ussie');
      console.log('   Mod√®le:', testResult.model);
      console.log('   R√©ponse:', testResult.message);
    } else {
      console.error('‚ùå √âchec connexion:', testResult.error);
      return;
    }

    // 3. V√©rification explicite du mod√®le
    console.log('\nüéØ 3. V√âRIFICATION MOD√àLE UTILIS√â:');
    const modelCheck = await verifyDeepSeekModelUsage();
    if (modelCheck.success) {
      console.log('‚úÖ Mod√®le correct d√©tect√©');
      console.log('   Mod√®le demand√©:', modelCheck.requestedModel);
      console.log('   Mod√®le utilis√©:', modelCheck.actualModel);
      console.log('   URL API:', modelCheck.baseURL);
    } else {
      console.error('‚ùå Mod√®le incorrect d√©tect√©:');
      console.log('   Demand√©:', modelCheck.requestedModel);
      console.log('   Utilis√©:', modelCheck.actualModel);
      console.log('   Erreur:', modelCheck.error);
    }

    // 4. R√©sum√© final
    console.log('\nüìä 4. R√âSUM√â FINAL:');
    console.log('   ‚úÖ Configuration:', config.hasApiKey ? 'OK' : '√âCHEC');
    console.log('   ‚úÖ Connexion:', testResult.success ? 'OK' : '√âCHEC');
    console.log('   ‚úÖ Mod√®le:', modelCheck.success ? 'DEEPSEEK V2 CONFIRM√â' : 'PROBL√àME D√âTECT√â');

    if (config.hasApiKey && testResult.success && modelCheck.success) {
      console.log('\nüéâ SUCC√àS: Votre API utilise exclusivement DeepSeek v2!');
      console.log('   Toutes les v√©rifications sont pass√©es avec succ√®s.');
    } else {
      console.log('\n‚ö†Ô∏è ATTENTION: Probl√®me d√©tect√© dans la configuration.');
      console.log('   V√©rifiez votre cl√© API et votre configuration r√©seau.');
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.message);
  }
}

// Ex√©cuter la v√©rification
runDeepSeekVerification().catch(console.error);
